


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             SHUNTING_YARD_ALGO,CODE,READWRI
TE
    2 00000000                 ENTRY
    3 00000000         INIT
    4 00000000 E28F0E11        ADR              R0,source_array_ROM
    5 00000004 E3A02101        LDR              R2,=0x40000000 ; value stack
    6 00000008 E3A03205        LDR              R3,=0x50000000 ; operator stack
                                                            
    7 0000000C E4D08001        LDRB             R8,[R0],#01
    8 00000010 E3A0A000        MOV              R10,#0
    9 00000014         
   10 00000014         START
   11 00000014 E4D01001        LDRB             R1,[R0],#1
   12 00000018 E2588001        SUBS             R8,R8,#01
   13 0000001C E3780001        CMP              R8,#-1
   14 00000020 0A000027        BEQ              OP_STACK_EMPTY_LOOP
   15 00000024         
   16 00000024 E3510009        CMP              R1,#9
   17 00000028                 ITT              LE
   18 00000028 D4C21001        STRBLE           R1,[R2],#1
   19 0000002C DAFFFFF8        BLE              START
   20 00000030         
   21 00000030 E351000E        CMP              R1,#14
   22 00000034                 ITT              EQ
   23 00000034 04C31001        STRBEQ           R1,[R3],#1
   24 00000038 0AFFFFF5        BEQ              START
   25 0000003C         
   26 0000003C E351000F        CMP              R1,#15
   27 00000040 0A000002        BEQ              LEFT_P_LOOP
   28 00000044         
   29 00000044 E3510009        CMP              R1,#9
   30 00000048 C4C31001        STRBGT           R1,[R3],#1
   31 0000004C         
   32 0000004C EAFFFFF0        B                START
   33 00000050         
   34 00000050         LEFT_P_LOOP
   35 00000050 E2533001        SUBS             R3,R3,#1
   36 00000054 E5D31000        LDRB             R1,[R3]
   37 00000058 E351000E        CMP              R1,#14      ; compare the opera
                                                            tor at the top with
                                                             left paranthese
   38 0000005C 0AFFFFEC        BEQ              START
   39 00000060 E2522001        SUBS             R2,R2,#1
   40 00000064 E5D24000        LDRB             R4,[R2]
   41 00000068 E2522001        SUBS             R2,R2,#1
   42 0000006C E5D25000        LDRB             R5,[R2]
   43 00000070         
   44 00000070         ; performs the arithmetic operation and store the result
                        in R6
   45 00000070 E351000A        CMP              R1,#10
   46 00000074 00846005        ADDEQ            R6,R4,R5
   47 00000078 E351000B        CMP              R1,#11
   48 0000007C 00456004        SUBEQ            R6,R5,R4
   49 00000080 E351000C        CMP              R1,#12
   50 00000084 00060594        MULEQ            R6,R4,R5
   51 00000088 E351000D        CMP              R1,#13
   52 0000008C 03A06000        MOVEQ            R6,#0
   53 00000090 0A000001        BEQ              DIVIDE1
   54 00000094         AFTER_DIVIDE1



ARM Macro Assembler    Page 2 


   55 00000094         
   56 00000094 E4C26001        STRB             R6,[R2],#1
   57 00000098 EAFFFFEC        B                LEFT_P_LOOP
   58 0000009C         
   59 0000009C         DIVIDE1
   60 0000009C E1550004        CMP              R5,R4
   61 000000A0                 ITTT             GE
   62 000000A0 A0455004        SUBGE            R5,R5,R4
   63 000000A4 A2866001        ADDGE            R6,R6,#1
   64 000000A8 AAFFFFFB        BGE              DIVIDE1
   65 000000AC EAFFFFF8        B                AFTER_DIVIDE1
   66 000000B0         
   67 000000B0         DIVIDE2
   68 000000B0 E1550004        CMP              R5,R4
   69 000000B4                 ITTT             GE
   70 000000B4 A0455004        SUBGE            R5,R5,R4
   71 000000B8 A2866001        ADDGE            R6,R6,#1
   72 000000BC AAFFFFFB        BGE              DIVIDE2
   73 000000C0 EA000010        B                AFTER_DIVIDE2
   74 000000C4         
   75 000000C4         OP_STACK_EMPTY_LOOP
   76 000000C4 E3530215        CMP              R3,#0x50000001
   77 000000C8 03A0A001        MOVEQ            R10,#1
   78 000000CC E2533001        SUBS             R3,R3,#1
   79 000000D0 E5D31000        LDRB             R1,[R3]
   80 000000D4 E2522001        SUBS             R2,R2,#1
   81 000000D8 E5D24000        LDRB             R4,[R2]
   82 000000DC E2522001        SUBS             R2,R2,#1
   83 000000E0 E5D25000        LDRB             R5,[R2]
   84 000000E4         
   85 000000E4         ; performs the arithmetic operation and store the result
                        in R6
   86 000000E4 E351000A        CMP              R1,#10
   87 000000E8 00846005        ADDEQ            R6,R4,R5
   88 000000EC E351000B        CMP              R1,#11
   89 000000F0 00456004        SUBEQ            R6,R5,R4
   90 000000F4 E351000C        CMP              R1,#12
   91 000000F8 00060594        MULEQ            R6,R4,R5
   92 000000FC E351000D        CMP              R1,#13
   93 00000100 03A06000        MOVEQ            R6,#0
   94 00000104 0AFFFFE9        BEQ              DIVIDE2
   95 00000108         AFTER_DIVIDE2
   96 00000108         
   97 00000108 E4C26001        STRB             R6,[R2],#1
   98 0000010C E35A0001        CMP              R10,#1
   99 00000110 1AFFFFEB        BNE              OP_STACK_EMPTY_LOOP
  100 00000114         
  101 00000114 EAFFFFFE 
                       HERE    B                HERE
  102 00000118         
  103 00000118 0B 09 0C 
              0E 0E 02 
              0A 08 0F 
              0D 02 0F source_array_ROM
                               DCB              0x0B,0x09,0x0C,0x0E,0x0E,0x02,0
x0A,0x08,0x0F,0x0D,0x02,0x0F 
                                                            ; 9 * (( 2 + 8 ) / 
                                                            2 )
  104 00000124         ; + -> 10 , - -> 11 , * -> 12 , / -> 13 , ( -> 14 , ) ->



ARM Macro Assembler    Page 3 


                        15
  105 00000124         
  106 00000124                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\prog_01.d -o.\objects\prog_01.o -IC:\Keil_v5\ARM\RV31\INC --predefine="_
_UVISION_VERSION SETA 536" --list=.\listings\prog_01.lst Prog_01.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AFTER_DIVIDE1 00000094

Symbol: AFTER_DIVIDE1
   Definitions
      At line 54 in file Prog_01.asm
   Uses
      At line 65 in file Prog_01.asm
Comment: AFTER_DIVIDE1 used once
AFTER_DIVIDE2 00000108

Symbol: AFTER_DIVIDE2
   Definitions
      At line 95 in file Prog_01.asm
   Uses
      At line 73 in file Prog_01.asm
Comment: AFTER_DIVIDE2 used once
DIVIDE1 0000009C

Symbol: DIVIDE1
   Definitions
      At line 59 in file Prog_01.asm
   Uses
      At line 53 in file Prog_01.asm
      At line 64 in file Prog_01.asm

DIVIDE2 000000B0

Symbol: DIVIDE2
   Definitions
      At line 67 in file Prog_01.asm
   Uses
      At line 72 in file Prog_01.asm
      At line 94 in file Prog_01.asm

HERE 00000114

Symbol: HERE
   Definitions
      At line 101 in file Prog_01.asm
   Uses
      At line 101 in file Prog_01.asm
Comment: HERE used once
INIT 00000000

Symbol: INIT
   Definitions
      At line 3 in file Prog_01.asm
   Uses
      None
Comment: INIT unused
LEFT_P_LOOP 00000050

Symbol: LEFT_P_LOOP
   Definitions
      At line 34 in file Prog_01.asm
   Uses
      At line 27 in file Prog_01.asm
      At line 57 in file Prog_01.asm




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

OP_STACK_EMPTY_LOOP 000000C4

Symbol: OP_STACK_EMPTY_LOOP
   Definitions
      At line 75 in file Prog_01.asm
   Uses
      At line 14 in file Prog_01.asm
      At line 99 in file Prog_01.asm

SHUNTING_YARD_ALGO 00000000

Symbol: SHUNTING_YARD_ALGO
   Definitions
      At line 1 in file Prog_01.asm
   Uses
      None
Comment: SHUNTING_YARD_ALGO unused
START 00000014

Symbol: START
   Definitions
      At line 10 in file Prog_01.asm
   Uses
      At line 19 in file Prog_01.asm
      At line 24 in file Prog_01.asm
      At line 32 in file Prog_01.asm
      At line 38 in file Prog_01.asm

source_array_ROM 00000118

Symbol: source_array_ROM
   Definitions
      At line 103 in file Prog_01.asm
   Uses
      At line 4 in file Prog_01.asm
Comment: source_array_ROM used once
11 symbols
342 symbols in table
